<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="11" tests="40" time="267.011" timestamp="2025-02-13T11:47:41.391167+03:00" hostname="DESKTOP-EQTA2OP"><testcase classname="demotests.test_fail.Test_Match" name="test_divide_number" time="0.016"><skipped type="pytest.xfail" message="Need To Investigate" /></testcase><testcase classname="demotests.test_fail.Test_Match" name="test_cube_number" time="0.013" /><testcase classname="demotests.test_parameter_2" name="test_areas[dimensions0-50-circle]" time="0.018"><failure message="AssertionError: Expected 50, but got 78.54&#10;assert 78.54 == 50">shape = 'circle', dimensions = (5, 10), expected_area = 50

    @pytest.mark.parametrize("shape", ["rectangle", "circle"])
    @pytest.mark.parametrize("dimensions, expected_area", [((5, 10), 50), ((10,), round(math.pi * 10**2, 2))])
    def test_areas(shape, dimensions, expected_area):
        if shape == "rectangle":
            area = dimensions[0] * dimensions[1]  # width * height
        elif shape == "circle":
            area = round(math.pi * (dimensions[0] ** 2), 2)  # Ï€ * r^2
        else:
            raise ValueError("Invalid shape")
    
&gt;       assert area == expected_area, f"Expected {expected_area}, but got {area}"
E       AssertionError: Expected 50, but got 78.54
E       assert 78.54 == 50

demotests\test_parameter_2.py:15: AssertionError</failure></testcase><testcase classname="demotests.test_parameter_2" name="test_areas[dimensions1-314.16-circle]" time="0.014" /><testcase classname="demotests.test_parameters" name="test_lambdaest_two_input_fields[30-40-70]" time="95.463" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[4-2]" time="0.015" /><testcase classname="demotests.test_parameters_two" name="test_lambdaest_two_input_fields[25-25-50]" time="123.136" /><testcase classname="demotests.test_skip.TestLambdaTest" name="test_sample_app_title" time="85.046"><skipped type="pytest.skip" message="Skipped">c:\Users\Gaming 15\Downloads\Demo_tests\demotests\test_skip.py:14: Skipped</skipped></testcase><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[5-1]" time="0.014" /><testcase classname="demotests.test_parameters_two" name="test_lambdaest_two_input_fields[30-40-70]" time="119.846" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[5-3]" time="0.015" /><testcase classname="demotests.test_parameters" name="test_lambdaest_two_input_fields[25-25-50]" time="106.553" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[6-2]" time="0.016" /><testcase classname="demotests.test_parameter_one" name="test_name[franklyne-franklyne]" time="93.372" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[4-3]" time="0.004" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[5-2]" time="0.006" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[6-1]" time="0.005" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[6-3]" time="0.005" /><testcase classname="demotests.test_fail.Test_Match" name="test_square_number" time="0.007"><skipped type="pytest.xfail" message="Result Add Numbers &amp; Not Multiply Numbers" /></testcase><testcase classname="demotests.test_skip.TestLambdaTest" name="test_pytest_github_repo" time="0.003"><skipped type="pytest.skip" message="Repo is not complete until after finishing tutorial">c:\Users\Gaming 15\Downloads\Demo_tests\demotests\test_skip.py:25: Repo is not complete until after finishing tutorial</skipped></testcase><testcase classname="demotests.test_parameter_2" name="test_areas[dimensions1-314.16-rectangle]" time="0.012"><failure message="IndexError: tuple index out of range">shape = 'rectangle', dimensions = (10,), expected_area = 314.16

    @pytest.mark.parametrize("shape", ["rectangle", "circle"])
    @pytest.mark.parametrize("dimensions, expected_area", [((5, 10), 50), ((10,), round(math.pi * 10**2, 2))])
    def test_areas(shape, dimensions, expected_area):
        if shape == "rectangle":
&gt;           area = dimensions[0] * dimensions[1]  # width * height
E           IndexError: tuple index out of range

demotests\test_parameter_2.py:9: IndexError</failure></testcase><testcase classname="demotests.test_skip_withoutdecorator" name="test_registration[edge]" time="0.005"><skipped type="pytest.skip" message="Logic was not implemented by the developer">c:\Users\Gaming 15\Downloads\Demo_tests\demotests\test_skip_withoutdecorator.py:42: Logic was not implemented by the developer</skipped></testcase><testcase classname="demotests.test_skip_withoutdecorator" name="test_registration[firefox]" time="0.003"><skipped type="pytest.skip" message="Logic was not implemented by the developer">c:\Users\Gaming 15\Downloads\Demo_tests\demotests\test_skip_withoutdecorator.py:42: Logic was not implemented by the developer</skipped></testcase><testcase classname="demotests.test_stop.Test_Match" name="test_number_square" time="0.004" /><testcase classname="demotests.test_stop.Test_Match" name="test_cube_number" time="0.005" /><testcase classname="demotests.test_stop.Test_Match" name="test_square_number" time="0.008"><skipped type="pytest.xfail" message="Result Add Numbers &amp; Not Multiply Numbers" /></testcase><testcase classname="demotests.test_fail.Test_Match" name="test_number_square" time="0.003"><skipped type="pytest.xfail" message="[NOTRUN] " /></testcase><testcase classname="demotests.test_stop.Test_Match" name="test_divide_number" time="0.009"><skipped type="pytest.xfail" message="Need To Investigate" /></testcase><testcase classname="demotests.test_fixture_parameters" name="test_submit[chrome]" time="190.734" /><testcase classname="demotests.test_skip.TestLambdaTest" name="test_ecommerce_title" time="0.003"><skipped type="pytest.skip" message="Code Has Not Been Deployed">c:\Users\Gaming 15\Downloads\Demo_tests\demotests\test_skip.py:18: Code Has Not Been Deployed</skipped></testcase><testcase classname="demotests.test_skip_withoutdecorator" name="test_registration[chrome]" time="0.008"><skipped type="pytest.skip" message="Logic was not implemented by the developer">c:\Users\Gaming 15\Downloads\Demo_tests\demotests\test_skip_withoutdecorator.py:42: Logic was not implemented by the developer</skipped></testcase><testcase classname="demotests.test_parameters_crossBrowser.Test_Drivers" name="test_multiple_browsers[chrome]" time="52.200" /><testcase classname="demotests.test_parameters" name="test_lambdaest_two_input_fields[10-10-20]" time="38.500" /><testcase classname="demotests.test_parameters_two" name="test_raising_base_to_power[4-1]" time="0.013" /><testcase classname="demotests.test_parameters_two" name="test_lambdaest_two_input_fields[10-10-20]" time="38.176" /><testcase classname="demotests.test_parameters_crossBrowser.Test_Drivers" name="test_multiple_browsers[firefox]" time="162.945" /><testcase classname="demotests.test_fixture_parameters" name="test_submit[firefox]" time="201.048" /><testcase classname="demotests.test_parameters_crossBrowser.Test_Drivers" name="test_multiple_browsers[edge]" time="57.147" /><testcase classname="demotests.test_parameter_2" name="test_areas[dimensions0-50-rectangle]" time="0.006" /><testcase classname="demotests.test_fixture_parameters" name="test_submit[edge]" time="61.053" /></testsuite></testsuites>